
snippet /** "Comment block"
/**
 * ${0}
 */
endsnippet

snippet php "Php file start"
<?php

declare(strict_types=1);

${0}
endsnippet

snippet phpbin "Bin php file start"
#!/usr/bin/env php
<?php

declare(strict_types=1);

${0}
endsnippet

# classes, interfaces, traits

snippet class "Short class: class {...}"
class `!p snip.rv = snip.basename`
{${0}
}
endsnippet

snippet class "Long class: <?php class {...}"
<?php

declare(strict_types=1);

namespace ${1};

/**
 * @author ${2:`git config user.name`} <${3:`git config user.email`}>
 */
class ${4:`!p snip.rv = snip.basename`}
{${0}
}
endsnippet

snippet class "Anonymous class: new class () {...}"
new class ($${1}) ${2}{
    public function __construct($$1)
    {
        $this->$1 = $$1;
    }${0}
};
endsnippet

snippet interface "Short interface: interface {...}"
interface ${4:`!p snip.rv = snip.basename`}
{${0}
}
endsnippet

snippet interface "Long interface: <?php interface {...}"
<?php

declare(strict_types=1);

namespace ${1};

/**
 * @author ${2:`git config user.name`} <${3:`git config user.email`}>
 */
interface ${4:`!p snip.rv = snip.basename`}
{${0}
}
endsnippet

snippet trait "Short trait: trait {...}"
trait `!p snip.rv = snip.basename`
{${0}
}
endsnippet

snippet trait "Long trait: <?php trait {...}"
<?php

declare(strict_types=1);

namespace ${1};

/**
 * @author ${2:`git config user.name`} <${3:`git config user.email`}>
 */
trait ${4:`!p snip.rv = snip.basename`}
{${0}
}
endsnippet

# PhpUnit

snippet case "PhpUnit test case"
public function test${1:Foo}(): void
{${0}
}
endsnippet

snippet data "PhpUnit data provider comment"
/**
 * @dataProvider ${0:foo}
 */
endsnippet

snippet data "PhpUnit data provider full"
/**
 * @dataProvider ${1:foo}
 */
public function $1(): array
{
    return [
        '${2:bar}' => [${0}],
    ];
}
endsnippet

snippet test "PhpUnit test class"
<?php

declare(strict_types=1);

namespace ${2}Tests${3};

use ${2/\\$//}$3\\${1:`!p snip.rv = snip.basename`};
use PHPUnit\Framework\TestCase;

/**
 * @covers \\${2/\\$//}$3\\$1
 */
final class $1Test extends TestCase
{${0}
}
endsnippet

# Class fields, methods

snippet var "Class field comment"
/**
 * @var ${0:string}
 */
endsnippet

snippet privvar "Private class field"
/**
 * @var ${1:string}
 */
private $${0:foo};
endsnippet

snippet protvar "Protected class field"
/**
 * @var ${1:string}
 */
protected $${0:foo};
endsnippet

snippet pubvar "Public class field"
/**
 * @var ${1:string}
 */
public $${0:foo};
endsnippet

snippet __con "Class constructor"
/**
 * @param ${1:string} $${2:foo}${3}
 */
public function __construct($1 $$2)
{
    $this->$2 = $$2;
}
endsnippet

snippet privfun "Private class method"
/**
 * @param ${1:string} $${2:foo}
 *
 * @return ${3:void}
 */
private function ${4:foo}($1 $$2): $3
{
}
endsnippet

snippet protfun "Protected class method"
/**
 * @param ${1:string} $${2:foo}
 *
 * @return ${3:void}
 */
protected function ${4:foo}($1 $$2): $3
{
}
endsnippet

snippet pubfun "Public class method"
/**
 * @param ${1:string} $${2:foo}
 *
 * @return ${3:void}
 */
public function ${4:foo}($1 $$2): $3
{
}
endsnippet
